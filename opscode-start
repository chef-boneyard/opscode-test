#!/usr/bin/env ruby

require 'rubygems'
require 'pp'
require 'appscript'
include Appscript

SRCDIR = File.expand_path(File.dirname(__FILE__))
DELAY  = 1

BASE_CMD = "cd #{SRCDIR} && rake dev:features:start:"

TASKS = {}
TASKS['platform'] = %w{couchdb rabbitmq parkplace chef_solr cert_erlang opscode_authz opscode_audit opscode_account chef_solr_indexer chef_server chef_server_webui nginx}
TASKS['community']= TASKS['platform'] + %w{community:mysql community:solr community:delayed_job community:webui}


def auth_up
  system("sudo echo")  
end

def create_tab
  app("System Events").application_processes["Terminal.app"].keystroke("t", :using=>:command_down)
end

def activate_terminal
  app("/Applications/Utilities/Terminal.app").windows.first.activate  
  app("System Events").application_processes["Terminal.app"].keystroke("n", :using=>:command_down)
  app('Terminal')  
end


def start_service_in_last_tab(window,service)
  # use xterm escape codes to set the tab title to the service running in the tab.
  cmd = 
    "unset PROMPT_COMMAND; echo -e \"\\033]0;#{service}\\007\"; " + 
    BASE_CMD +
    service

  app('Terminal').do_script(cmd, :in => window.tabs.last.get)
  sleep DELAY  
end

def start_services(services)
  auth_up
  term = activate_terminal
  window = term.windows.first.get
  
  services.each do |service|
    create_tab
    start_service_in_last_tab(window,service)
  end
end

if __FILE__ == $0
  services = (ARGV.shift || "platform").downcase
  raise "Invalid option: '#{services}', legal options are: #{TASKS.keys.join(', ')}" unless TASKS.has_key?(services)
  STDOUT.puts "Starting services:"
  pp service_list = TASKS[services]
  start_services(service_list)
end

